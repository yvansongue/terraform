name: Deploy EC2 Instance

on:
  push:
    branches:
      - main  # Triggers on push to the main branch
  workflow_dispatch:  # Manual trigger

jobs:
  deploy-ec2:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Specify your AWS region

    - name: Launch EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0490fddec0cbeb88b \  # Replace with your desired AMI ID
          --instance-type t2.micro \  # Specify the instance type
          --key-name private_key \  # Replace with your key pair name
          --security-group-ids sg-0d2fb3a8d987a55e3 \  # Replace with your security group ID
          --subnet-id subnet-07ad299f57f1d7468 \  # Replace with your subnet ID
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHubEC2Instance}]' \
          --query 'Instances[0].InstanceId' \
          --output text)
        
        echo "Instance ID: $INSTANCE_ID"

    - name: Wait for EC2 Instance to be Running
      run: |
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        echo "EC2 Instance is now running."

    - name: Get EC2 Instance Public IP
      run: |
        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        echo "EC2 Public IP: $PUBLIC_IP"
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Output Public IP
      run: |
        echo "EC2 Instance Public IP is: ${{ env.PUBLIC_IP }}"

